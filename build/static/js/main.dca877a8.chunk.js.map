{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","totalSpent","reduce","acc","cur","amount","className","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","useState","title","ExpensesList","items","length","id","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancelEditing","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dca877a8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  const totalSpent = props.totalSpent.reduce(\r\n    (acc, cur) => (acc += cur.amount),\r\n    0\r\n  );\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <p>Total Spent: {totalSpent}</p>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0)\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          key={dataPoint.label}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__description>\">\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n          totalSpent={filteredExpenses}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n\r\n        {/* {/* <ExpenseItem\r\n        title={props.expenses[0].title}\r\n        amount={props.expenses[0].amount}\r\n        date={props.expenses[0].date}\r\n        /> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //Using single state\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // console.log(userInput);\r\n\r\n    //alternate way of updating state with the latest statement\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n    // console.log(userInput);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    props.onCancelEditing();\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={cancelHandler}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const cancelEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense </button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancelEditing={cancelEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}